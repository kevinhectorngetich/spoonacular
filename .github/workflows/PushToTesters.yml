# Descriptive name for the workflow
name: Push Flutter App to Firebase Testers

# Trigger the workflow on pushes to the 'main' branch
on:
  push:
    branches:
      - main

# Define the job to build and deploy the app
jobs:
  build_and_deploy:
    # Use a self-hosted runner or a matrix of runners for different OSes
    runs-on: ubuntu-latest 

    steps:
      # Checkout the repository code
      - uses: actions/checkout@v3  # Use the latest version for stability

      # Setup Java (Flutter's requirement)
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # Use a recommended distribution
          java-version: 17  # Use a current LTS Java version
          
      # Setup Flutter (cache dependencies for faster builds)
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      
      # Run Flutter build runner

      - name: Build Runner
        run: dart run build_runner build --delete-conflicting-outputs

      # Build the release APK 
      - name: Build APK
        run: flutter build apk --release
        
      # Show APK location (optional for debugging)
      - name: Show APK location
        run: ls build/app/outputs/flutter-apk/ 

      # Upload APK to Firebase App Distribution (using improved action)
      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testers
          file: build/app/outputs/flutter-apk/app-release.apk
